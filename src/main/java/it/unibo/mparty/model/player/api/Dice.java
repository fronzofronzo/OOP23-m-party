package it.unibo.mparty.model.player.api;

import it.unibo.mparty.utilities.Pair;

/**
 * This interface models the concept of dice that players use during the game
 * to move. It has methods to set dice parameters ( like number of attempts,
 * minimum and maximum number that can be generated ) and to get them. In addition,
 * it has methods to roll the dice and generate a new number and a method to get it.
 */
public interface Dice {

    /**
     * Sets the number of attempts that can be done when the player rolls
     * the dice.
     * @param num of attempts.
     */
    void setNumberOfAttempts(int num);

    /**
     * Sets max number that player can make when the player rolls dice.
     * @param num to set as max.
     */
    void setMaxNumber(int num);

    /**
     * Sets minimum number that player can make when the player rolls dice.
     * @param num to set as minimum.
     */
    void setMinNumber(int num);

    /**
     * Simulates the roll of dice in game and generate a number. The result
     * of the dice generated with the method is the sum of the result of the
     * roll of dice for the number of attempts set. At the end, the dice is also
     * reset to default values to cancel effects of items.
     */
    void rollDice();

    /**
     * Get the last number generated by the dice
     * @return dice result.
     */
    int getResult();

    /**
     * Get the minimum and maximum number that can be generated by dice
     * @return {@link Pair} : with Pair.getX() get the minimum and Pair.getY()
     * gets the max.
     */
    Pair<Integer, Integer> getBounds();

    /**
     * Get the number of attempts of the dice.
     * @return number of attempts.
     */
    int getNumOfAttempts();

}
